import os
import asyncio
from aiogram import Bot, Dispatcher
from dotenv import load_dotenv
from database_functions import add_user, check_user, delete_user, update_user
from handlers import singup, work

async def main():
    load_dotenv()
    bot_token = os.getenv("TELEGRAM_TOKEN")
    bot = Bot(bot_token)
    dp = Dispatcher()

    dp.include_routers(singup.router)
    dp.include_routers(work.router)    

    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)



# button_signup_user = KeyboardButton('–£–∫–∞–∑–∞—Ç—å —Å–≤–æ—ë –§–ò–û üòä')
# greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
# greet_kb.add(button_signup_user)

# button_check_resp = KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìö', )
# button_check_friend = KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ö–æ–¥—Å—Ç–≤–∞ –ø–∞—Ä –¥—Ä—É–∑–µ–π ü§ù')
# button_unsignup_user = KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Å–≤–æ—ë –§–ò–û üòû')
# work_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
# work_kb.add(button_check_resp)
# work_kb.add(button_check_friend)
# work_kb.add(button_unsignup_user)

# async def ask_full_name(message):
#     await message.reply('–ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –§–ò–û')

# async def user_no_signup(message):
#     await message.reply('–£ —Ç–µ–±—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ –§–ò–û, —è –Ω–µ –º–æ–≥—É —Ç–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å', reply_markup=greet_kb)

# @dp.message_handler(commands=['start'])
# async def process_start_command(message: types.Message):
    
#     await message.reply("–ü—Ä–∏–≤–µ—Ç, —è –æ—á–µ–Ω—å —Ä–∞–¥, —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ!\n\n–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ —Ç–≤–æ–∏ –ø–∞—Ä—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ "
#                         "–∂–µ –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å, –∫–æ–≥–¥–∞ —Ç—ã —Å–º–æ–∂–µ—à—å –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –º–µ–∂–¥—É –ø–∞—Ä–∞–º–∏, —É—á–∏—Ç—ã–≤–∞—è –≤–∞—à–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è!\n\n"
#                         "–ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–π - –º–Ω–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∫—Ç–æ —Ç—ã, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É –≤–Ω–∏–∑—É.", reply_markup=greet_kb)

# @dp.message_handler()
# async def process_messsage_command(message: types.Message):
#     if message.text == '–£–∫–∞–∑–∞—Ç—å —Å–≤–æ—ë –§–ò–û üòä':
#         await ask_full_name(message)
#     elif message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìö":
#         if not check_user(message.from_id):
#             await user_no_signup(message)
#     elif message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ö–æ–¥—Å—Ç–≤–∞ –ø–∞—Ä –¥—Ä—É–∑–µ–π ü§ù':
#         await ask_full_name(message)
#     else:
#         await message.reply(get_rasps(message.text))
#     print(message.text)


if __name__ == '__main__':
    asyncio.run(main())